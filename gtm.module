<?php 
/**
 * @file
 * Drupal Module: Google Tag Manager
 * Provides integration with Google Tag Manager.
 */

/**
 * Implements hook_perm().
 */
function gtm_perm() {
  return array('administer google tag manager');
}

/**
 * Implements hook_menu().
 */
function gtm_menu() {
  $items['admin/settings/gtm'] = array(
    'title' => 'Google Tag Manager',
    'description' => 'Configure the settings for Google Tag Manager.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('gtm_admin_settings_form'),
    'access arguments' => array('administer google tag manager'),
    'file' => 'gtm.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Implements hook_theme
 */

function gtm_theme() {
  return array(
    'gtm_container' => array(
      'variables' => array('gtm_id' => NULL),
      'file' => 'gtm.theme.inc'
    ),
    'gtm_container_block' => array(
      'render element' => 'element',
      'file' => 'gtm.theme.inc'
    ),
    'gtm_datalayer' => array(
      'variables' => array('dataLayer' => NULL),
      'file' => 'gtm.theme.inc'
    ),
  );
}

/**
 * Implements hook_block_info().
 */
function gtm_block_info() {
  $blocks = array();

  $blocks['gtm_container_block'] = array(
    'info' => t('Google Tag Manager Container'),
    'cache' => DRUPAL_CACHE_PER_PAGE,
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function gtm_block_view($delta = '') {
  $block = array();

  switch($delta) {
    case 'gtm_container_block':
      $block['subject'] = '';
      $block['content'] = array('#theme' => 'gtm_container');
      break;
  }
  return $block;
}

/**
 * CTools plugin API hook for Context. Note that a proper entry in
 * hook_ctools_plugin_api() must exist for this hook to be called.
 */
function gtm_context_plugins() {
  $plugins = array();
  $plugins['context_reaction_data_layer'] = array(
    'handler' => array(
      'path' => drupal_get_path('module', 'gtm') .'/plugins',
      'file' => 'context_reaction_data_layer.inc',
      'class' => 'context_reaction_data_layer',
      'parent' => 'context_reaction',
    ),
  );
  return $plugins;
}

/**
 * Register a reaction
 * @return array
 */

function gtm_context_registry() {
  return array(
    'reactions' => array(
      'data_layer' => array(
        'title' => t('GTM dataLayer'),
        'plugin' => 'context_reaction_data_layer',
      ),
    ),
  );
}

/**
 * Determines if the current role(s) should be tracked
 */
function gtm_should_track() {
  global $user;
  $id = variable_get('gtm', NULL);
  $track = array();

  if (is_array($user->roles)) {
    foreach ($user->roles as $role) {
      $role = str_replace(' ', '_', $role);
      $track[] = variable_get('gtm_track_' . $role, FALSE) ? TRUE : FALSE;
    }
  }
  // Don't track page views in the admin sections, or for certain roles.
  // Check if we should track the currently active user's role.
  if(in_array(TRUE, $track) && arg(0) != 'admin' && !is_null($id)) {
    return TRUE;
  }
  return FALSE;
}

/**
 * Implements hook_gtm_data_layer
 */

function gtm_gtm_data_layer() {
 if($plugin = context_get_plugin('reaction', 'data_layer')) {
  return $plugin->execute();
 }
}
